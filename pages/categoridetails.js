import apiData from "../public/apiData.json"
import Head from "next/head"
import { useState } from "react";
import { useSelector } from "react-redux";
import Footer from "../components/Footer";
import Header from "../components/head/Header"
import SearchResult from "../components/head/SearchResult";
import TypeBody from "../components/category/TypeBody";

import { selectrelated } from "../reduxStore/detailsStore";
import Image from "next/image";

function Categoridetails({data}) {

     //related items show
     const relatedproducts = useSelector(selectrelated);
     const [productData]=useState(relatedproducts);
  
///from child call back
const [quantity, setQuantity]= useState(1)
const [showINC,setShowINC] = useState(false);
const toogle = () => {
    setShowINC(false);
 }
 const qtytoogle = () => {
 setQuantity(1);
 }
 

 

    return (
        <div>
           <Head>
           <title  > {data.title.title} </title> 
           <meta name="description" content="Generated by Hs-developer" />
        {data.settings?.map(({id,icon})=>(
         <link key={id} rel="icon" href={icon[0]} />
      ))}
      </Head>
          <Header posts={data.products}
        settings={data.settings} 
        button={data.headerPart2}
        siteButton={data.siteBerButton} />
    <div className="max-h-full max-w-screen-2xl mx-auto" >
    <div className="border-b-2 mb-2 ">
        {data.categoryBanner2?.map(({image,id})=> { 
         
         const randomImage = 
          Math.floor(Math.random() * (image.length)) ;
        return (
      <Image 
      key={id}
      objectFit="contain"
      src={image[randomImage]}
      width={1400}
      height={241}
     />
        
   )})}
        </div>
          <main className="sm:flex-grow overflow-hidden 
        grid grid-flow-row-dense md:grid-cols-2 
        lg:grid-cols-3 xl:grid-cols-4 
         mx-auto ">
                           {/*First Part*/}        
{relatedproducts &&
          relatedproducts
          .map(({id,title,price,discountPrice ,description,category,images,quantity,type,companyName,rating,instock}) => 
           
           (
           <TypeBody
           key={id}
           id={id}
           title={title}
           price={price}
           description={description}
           category={category}
           image={images}
           quantity={quantity}
           type={type}
           posts={data.products} 
          companyName={companyName}
          rating={rating}
          instock={instock}
          discountPrice={discountPrice}
          settings={data.settings}
           /> )

            )}

          </main>
          </div>
          <SearchResult  posts={data.products} toogle={toogle}   qtytoogle={qtytoogle} />
          <Footer settings={data.settings} />
       
        </div>
    )
}

export default Categoridetails



export async function getStaticProps(context) {
  
  const data = apiData

  return {
    props: { data }, 
  }
}