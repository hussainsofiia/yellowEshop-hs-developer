import Header from "../components/head/Header";
import { useDispatch, useSelector } from "react-redux";
import { selectSearch } from "../reduxStore/searchBasket";
import SearchBody from "../components/head/SearchBody";
import { useEffect, useState } from "react";
import { removeSaerch, selectSearchDetails } from "../reduxStore/detailsStore";
import {StarIcon} from "@heroicons/react/solid";
import {StarIcon as OutlineStar} from "@heroicons/react/outline";

import Currency from "react-currency-formatter";
import Footer from "../components/Footer";
import Head from "next/head";
import apiData from "../public/apiData.json"

function Search({data,session}) {
    //redux part
    const dispatch = useDispatch();

    //redux
    const searchItems = useSelector(selectSearch);
    const detailsSearch = useSelector(selectSearchDetails);
    

    //react
    const [sortText,setSortText]= useState("Featured")
    const [sortshow,setSortshow]= useState(false);
    const [hasPrime] = useState(Math.random() <0.5);
    const [items,setItems] = useState(data.products);
 
    useEffect(() => {
        const fetchPost = async () =>{
          setItems(data.products);
          }
        fetchPost();
     }, []);

      console.log(items);

    const filteritems = (categItem) => {
        const updatedItems = data.products.filter((currentValueItems) => {
            return currentValueItems.type === categItem;
        })
        dispatch(removeSaerch());
        setItems(updatedItems);
        }

    const filterStar = (categItem) => {
        const updatedItems = data.products.filter((currentValueItems) => {
            return currentValueItems.rating === categItem;
        })
        dispatch(removeSaerch());
        setItems(updatedItems);
         }

    const sortByprice = () =>{
        const sortedlow = [...items].sort((a, b) => {
            return a.price - b.price;
        });
      
        setItems(sortedlow);
        setSortText("Price : Low to High");
        setSortshow(false);
        dispatch(removeSaerch());
       
       
    };
    const sortBypriceHigh = () =>{
        
        const sortedhigh = [...items].sort((a, b) => {
            return b.price - a.price;
        });
        setItems(sortedhigh);
        setSortText("Price : High to Low");
        setSortshow(false);
        dispatch(removeSaerch());
      
    };
console.log(sortByprice)

const recomended = () => {
    setItems(data.products);
    dispatch(removeSaerch());
    setSortText("Recomended Customers");
    setSortshow(false);
    
}
const Featured = () => {
    setItems(data.products);
    dispatch(removeSaerch());
    setSortText("Featured");
    setSortshow(false);
    
}

//sort dropdown  

    return (
        <div> 
             <div className="">
             <Head>
             <title  > {data.title.title} </title>
              <meta name="description" content="Generated by Hs-developer" />
        {data.settings?.map(({id,icon})=>(
         <link key={id} rel="icon" href={icon[0]} />
      ))}
      </Head>
      <Header 
         posts={data.products}
        settings={data.settings} 
        button={data.headerPart2}
        siteButton={data.siteBerButton}
        />
            </div>
            <div className="max-h-full max-w-screen-2xl mx-auto">
            {/*Header part*/}
            <div  className=" mt-10 block md:flex items-center justify-between px-10 py-2  border-b-2 border-gray-700  test-black text-sm   ">
             
          
             
                <div className="flex items-center space-x-2 font-medium"> 
               
                <p>results for</p>
                {searchItems?.length === 0 ? <span className="font-bold text-yellow-600">{`"${detailsSearch}"`}</span> :
                <span className="font-bold text-yellow-600"> {`"${searchItems}"`}</span> }
                </div> 

                <div className="flex items-center shadow-md rounded-md p-1 px-2 relative mr-10 ">
                   <div className="flex space-x-2 font-medium"> <p>Sort by: </p> 
                    <span className="cursor-pointer font-normal" onClick={() => setSortshow(!sortshow)}>{sortText}</span>
                    </div>
                    {sortshow && 
                    <div className="z-10 absolute top-10 whitespace-nowrap space-y-2 bg-gray-200 p-2 shadow-xl ">
                        <div className="p-1 cursor-pointer hover:border-2 border-gray-700 hover:bg-gray-300  " onClick={Featured}>Featured</div>
                    <div className="p-1 cursor-pointer hover:border-2 border-gray-700 hover:bg-gray-300  " onClick={sortByprice}>Price : Low to High</div>
                    <div className="p-1 cursor-pointer hover:border-2 border-gray-700 hover:bg-gray-300 " onClick={sortBypriceHigh}>Price : High to Low</div>
                    <div className="p-1 cursor-pointer hover:border-2 border-gray-700 hover:bg-gray-300 "  onClick={ recomended }> Recomended Customers</div>
                    </div>
                    }
                   
                </div>

            </div>

                {/*second  part*/}

                <div className=" p-6 sm:flex-grow overflow-hidden 
        grid grid-flow-row-dense md:grid-cols-3 
        lg:grid-cols-4 xl:grid-cols-5 
         mx-auto ">
               {/*left  part*/}

                    <div className="   border-r-2 border-gray-300 pb-5 shadow-md space-y-2 col-span-1 rounded-b-2xl sticky top-0 overflow-y-visible  ">
       <div className="">

      
                   {/* <div>
                        <p className="font-bold">Department</p>
                        <p>Computers & Tablets</p>
                    </div>*/}

                    <div>
                        <p className="font-bold">Avg. Customer Review</p>

                        <div onClick={()=> filterStar(5)} className="flex cursor-pointer "> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/>
                     </div>
                     <div  onClick={()=> filterStar(4)} className="flex cursor-pointer "> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    
                     </div>
                     <div  onClick={()=> filterStar(3)} className="flex cursor-pointer "> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/> 
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                  
                     </div>
                     <div  onClick={()=> filterStar(2)} className="flex cursor-pointer "> 
                    <StarIcon className="h-5 text-yellow-500"/>
                    <StarIcon className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                   
                     </div>
                     <div  onClick={()=> filterStar(1)} className="flex cursor-pointer "> 
                    <StarIcon className=" h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                    <OutlineStar className="h-5 text-yellow-500"/>
                   
                   
                     </div>
                    </div>
                    <div>
                        <p className="font-bold">Category</p>
                       

                        <div className="">

                            <div className=" space-x-2">
                            <input className=" focus:outline-none" type="radio" id="all" name="gender" value="all"  onClick={()=> setItems(data?.products,  dispatch(removeSaerch())) } />
                           <label className="hover:text-yellow-600 link " htmlFor="all">All </label><br/>
                            </div>
                            <div className=" space-x-2">
                            <input className=" focus:outline-none" type="radio" id="women" name="gender" value="women" onClick={()=> filteritems('women')}/>
                            <label className="hover:text-yellow-600 link"  htmlFor="women">{`Woman's Fashion`}</label> <br />
                            </div>

                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="man" name="gender" value="men" onClick={()=> filteritems('men')}/>
                       <label htmlFor="men"  className="hover:text-yellow-600 link">{`Man's Fashion`}</label> <br />
                        </div>

                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="electronics" name="gender" value="electronics" onClick={()=> filteritems('electronics')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="electronics">Electronic Devices</label><br/>

                        </div>

                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="home" name="gender" value="home" onClick={()=> filteritems('home')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="home">Home & Lifestyle</label><br/>

                        </div> 
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="beauty" name="gender" value="beauty" onClick={()=> filteritems('beauty')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="beauty">Beauty & Lifestyle</label><br/>

                        </div> 
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="food" name="gender" value="food" onClick={()=> filteritems('food')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="food">Food & Beverage </label><br/>

                        </div> 
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="animals" name="gender" value="animals" onClick={()=> filteritems('animals')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="animals">Animals & Food</label><br/>

                        </div> 
                       
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="baby" name="gender" value="baby" onClick={()=> filteritems('baby')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="baby">Baby & Toys</label><br/>

                        </div> 
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="health" name="gender" value="health" onClick={()=> filteritems('health')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="health">Health & Care</label><br/>

                        </div> 
                        <div className=" space-x-2">
                        <input className=" focus:outline-none" type="radio" id="others" name="gender" value="others" onClick={()=> filteritems('others')}/>
                       <label className="hover:text-yellow-600 link" htmlFor="others">Others</label><br/>

                        </div> 
                        </div>



                        
                        
                    </div>

                    {data.settings.map((item)=>(
                    <div key={item.id}>
                   
                        <p className="font-bold ">Price</p>
                        <span onClick={sortByprice}  className=" hover:text-yellow-600 link flex space-x-2"> <p>Under</p> 
                       <span><Currency quantity='600' currency={item.currency} /></span>  </span>
                       <span onClick={sortBypriceHigh}  className=" hover:text-yellow-600 link flex space-x-2">
                       <span><Currency quantity='700' currency={item.currency} /></span>  <p>to Above</p>  </span>
                        
                        <p onClick={recomended} className="hover:text-yellow-600 link">Recomended</p>
                       
                    </div>
                        )) }

                    </div>

                    </div>
  {/*middle and right  part*/}

  
 
                    <div className="col-span-1 md:col-span-2 lg:col-span-3 p-6 space-y-10  ">


            {searchItems.length === 0 ?
            
            <>{items.filter((val) => {

                if(detailsSearch == "") {
                    return val
                } else if (val.title.toLowerCase().includes(detailsSearch.toLowerCase())){
                    return val
                }
            }).map(({id,title,price,discountPrice ,description,category,images,quantity,type,companyName,rating,instock}) =>{
                return(
                    <SearchBody 
                    settings={data.settings}
                    key={id}
                    id={id}
                    title={title}
                    price={price}
                    description={description}
                    category={category}
                    image={images}
                    quantity={quantity}
                    type={type}
                    posts={data.products} 
                   companyName={companyName}
                   rating={rating}
                   instock={instock}
                   discountPrice={discountPrice}
                    //qtyChangeHandler={qtyChangeHandler}
 
                    />
                )
            })}</> :
                < > {items.filter((val) => {
                    if(searchItems == "") {
                        return val
                    } else if (val.title.toLowerCase().includes(searchItems.toLowerCase())){
                        return val
                    }
                }).map(({id,title,price,discountPrice ,description,category,images,quantity,type,companyName,rating,instock}) =>{
                    return(
                        <SearchBody 
                        settings={data.settings}
                        key={id}
                      id={id}
                       title={title}
                      price={price}
                      description={description}
                       category={category}
                       image={images}
                     quantity={quantity}
                      type={type}
                   posts={data.products} 
                companyName={companyName}
                    rating={rating}
                 instock={instock}
                     discountPrice={discountPrice}
                        //qtyChangeHandler={qtyChangeHandler}
     
                        />
                    )
                })} </> }

         </div>
                </div>
                </div>
                <Footer settings={data.settings} />
        </div>
    )
}

export default Search




export async function getStaticProps(context) {
  
    const data = apiData
  
    return {
      props: { data }, 
    }
  }